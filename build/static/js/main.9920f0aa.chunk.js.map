{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","helpers/filter.js","App.js","hooks/localStorage.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","handlelAddContact","useState","name","setName","number","setNumder","handelChange","e","target","value","onSubmit","preventDefault","console","log","className","s","title","label","text","type","input","pattern","required","onChange","button","ContactList","contacts","deliteContact","list","map","contact","item","text_d","onClick","id","Filter","filter","handelChangeFilter","getFilterContacts","toLowerCase","includes","trim","defaultContacts","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","some","userName","alert","prevstate","shortid","generate","currentTarget","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9920f0aa.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ handlelAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumder(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    handlelAddContact({ name, number });\n    console.log(name, number);\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <h1 className={s.title}>Phonebook </h1>\n      <label className={s.label}>\n        <p className={s.text}>Name</p>\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handelChange}\n          value={name}\n        />\n      </label>\n      <label>\n        <p className={s.text}>Number</p>\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handelChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  handlelAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, deliteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <li className={s.item} key={contact.id}>\n          <div>\n            <p className={s.text}>\n              Name: <span className={s.text_d}>{contact.name}</span>\n            </p>\n            <p className={s.text}>\n              Number: <span className={s.text_d}>{contact.number}</span>\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => deliteContact(contact.id)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  deliteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ filter, handelChangeFilter }) {\n  return (\n    <>\n      <h2 className={s.title}>Find contacts by name</h2>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handelChangeFilter}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handelChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","function getFilterContacts(contacts, filter) {\n  console.log(\"отфильтровал\");\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n}\n\nexport default getFilterContacts;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nimport getFilterContacts from \"./helpers/filter\";\nimport { useLocalStorage } from \"./hooks/localStorage\";\n\nconst defaultContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", defaultContacts);\n  const [filter, setFilter] = useState(\"\");\n\n  const handlelAddContact = (contact) => {\n    contacts.some((userName) => userName.name === contact.name)\n      ? alert(\"Пользователь с таким именем уже добавлен\")\n      : setContacts((prevstate) => [\n          ...prevstate,\n          { id: shortid.generate(), ...contact },\n        ]);\n  };\n\n  const deliteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const handelChangeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <ContactForm handlelAddContact={handlelAddContact} />\n      <Filter filter={filter} handelChangeFilter={handelChangeFilter} />\n      <ContactList\n        contacts={getFilterContacts(contacts, filter)}\n        deliteContact={deliteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2KmmP\",\"modal-form-icon\":\"ContactForm_modal-form-icon__3OIc8\",\"title\":\"ContactForm_title__2wFMF\",\"text\":\"ContactForm_text__3Rm8H\",\"button\":\"ContactForm_button__3qZq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1FxS2\",\"text\":\"ContactList_text__3CClQ\",\"text_d\":\"ContactList_text_d__2Nomb\",\"item\":\"ContactList_item__1jJBK\",\"button\":\"ContactList_button__1Qu3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1SbD_\",\"input\":\"Filter_input__15LMk\",\"modal-form-icon\":\"Filter_modal-form-icon__1wM8I\"};"],"sourceRoot":""}