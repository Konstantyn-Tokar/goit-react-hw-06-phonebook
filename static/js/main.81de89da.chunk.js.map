{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/store.js","components/ContactForm/ContactForm.jsx","redux/action.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","initialStoreItem","id","name","number","contactsReduser","combineReducers","items","state","type","payload","existingContact","some","alert","filter","rootReduser","contacts","store","createStore","composeWithDevTools","connect","dispatch","onSumbit","shortid","generate","addContact","useState","setName","setNumder","handelChange","e","target","value","toСlear","onSubmit","preventDefault","console","log","className","s","title","label","text","input","pattern","required","onChange","button","toLowerCase","includes","trim","deleteContact","list","map","item","text_d","onClick","handelChangeFilter","currentTarget","App","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,kBAAkB,kC,4DCAhGD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,kBAAkB,qCAAqC,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,8B,kGCEnLC,EAAmB,CACvB,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cA6B1CC,EAAkBC,0BAAgB,CACtCC,MA3BmB,WAAkD,IAAjDC,EAAgD,uDAAxCP,EAAwC,yCAApBQ,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtD,OAAQD,GACN,IAAK,cACH,IAAME,EAAkBH,EAAMI,MAAK,qBAAGT,OAAoBO,EAAQP,QAClE,OAAQQ,GAEHE,MAAM,wHAAD,OAA0BH,EAAQP,KAAlC,yEAAwDK,GAF3D,sBACCA,GADD,CACQE,IAGjB,IAAK,iBACH,OAAOF,EAAMM,QAAO,qBAAGZ,KAAgBQ,KAEzC,QACE,OAAOF,IAgBXM,OAZoB,WAAoC,IAAnCN,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,MACO,mBADCD,EAEGC,EAGAF,KASPO,EAAcT,0BAAgB,CAClCU,SAAUX,IAKGY,EAFDC,sBAAYH,EAAaI,iC,qECmCvC,IAIeC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACnB,EAAMC,GAAP,OAAkBiB,EC/EX,SAAClB,EAAMC,GACxB,MAAO,CACLK,KAAM,cACNC,QAAS,CACPR,GAAIqB,IAAQC,WACZrB,OACAC,WDyEiCqB,CAAWtB,EAAMC,QAGzCgB,EA7Ef,YAAoC,IAAbE,EAAY,EAAZA,SACrB,EAAwBI,mBAAS,IAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOtB,EAAP,KAAewB,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlB5B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,MACd,OAAQ7B,GACN,IAAK,OACHwB,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAYAC,EAAU,WACdN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,SAda,SAACJ,GACpBA,EAAEK,iBAEFb,EAASnB,EAAMC,GACfgC,QAAQC,IAAIlC,EAAMC,GAClB6B,KASA,UACE,oBAAIK,UAAWC,IAAEC,MAAjB,wBACA,wBAAOF,UAAWC,IAAEE,MAApB,UACE,mBAAGH,UAAWC,IAAEG,KAAhB,kBACA,uBACEjC,KAAK,OACL6B,UAAWC,IAAEI,MACbxC,KAAK,OACLyC,QAAQ,yHACRJ,MAAM,kcACNK,UAAQ,EACRb,MAAO7B,EACP2C,SAAUjB,OAGd,kCACE,mBAAGS,UAAWC,IAAEG,KAAhB,oBACA,uBACEjC,KAAK,MACL6B,UAAWC,IAAEI,MACbxC,KAAK,SACLyC,QAAQ,yFACRJ,MAAM,giBACNK,UAAQ,EACRb,MAAO5B,EACP0C,SAAUjB,OAGd,wBAAQpB,KAAK,SAAS6B,UAAWC,IAAEQ,OAAnC,+B,gBEhCN,IAce3B,eARS,SAACZ,GAAD,MAAY,CAClCQ,UAPyBA,EAOGR,EAAMQ,SAAST,MAPRO,EAOeN,EAAMQ,SAASF,OAN1DE,EAASF,QAAO,qBAAGX,KACnB6C,cAAcC,SAASnC,EAAOoC,OAAOF,oBAFpB,IAAChC,EAAUF,KAUV,SAACO,GAAD,MAAe,CACxC8B,cAAe,SAACjD,GAAD,OAAQmB,EDnCH,SAACnB,GAAD,MAAS,CAC7BO,KAAM,iBACNC,QAASR,GCiCuBiD,CAAcjD,QAGjCkB,EA9Cf,YAAmD,IAA5BJ,EAA2B,EAA3BA,SAAUmC,EAAiB,EAAjBA,cAC/B,OACE,oBAAIb,UAAWC,IAAEa,KAAjB,SACGpC,EAASqC,KAAI,gBAAGnD,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIkC,UAAWC,IAAEe,KAAjB,UACE,gCACE,oBAAGhB,UAAWC,IAAEG,KAAhB,mBACQ,sBAAMJ,UAAWC,IAAEgB,OAAnB,SAA4BpD,OAEpC,oBAAGmC,UAAWC,IAAEG,KAAhB,qBACU,sBAAMJ,UAAWC,IAAEgB,OAAnB,SAA4BnD,UAGxC,wBACEK,KAAK,SACLP,GAAIA,EACJoC,UAAWC,IAAEQ,OACbS,QAAS,kBAAML,EAAcjD,IAJ/B,sBAT0BA,W,iBCiBpC,IAQekB,eARS,SAACZ,GAAD,MAAY,CAClCM,OAAQN,EAAMQ,SAASF,WAGE,SAACO,GAAD,MAAe,CACxCoC,mBAAoB,SAACzB,GAAD,OAAWX,EFbN,SAACW,GAAD,MAAY,CACrCvB,KAAM,iBACNC,QAASsB,GEW+ByB,CAAmBzB,QAG9CZ,EA5Bf,YAAiD,IAA/BN,EAA8B,EAA9BA,OAAQ2C,EAAsB,EAAtBA,mBACxB,OACE,qCACE,oBAAInB,UAAWC,IAAEC,MAAjB,mCACA,uBACEF,UAAWC,IAAEI,MACblC,KAAK,OACLN,KAAK,SACL6B,MAAOlB,EACPgC,SAAU,SAAChB,GAAD,OAAO2B,EAAmB3B,EAAE4B,cAAc1B,gBCyC7C2B,MAtCf,WAqBE,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IAGA,cAAC,EAAD,IAIA,cAAC,EAAD,QCzCNF,QAAQC,IAAIpB,EAAM2C,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ+C,SAASC,eAAe,U,kBCd1BlE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.81de89da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1Ts-M\",\"input\":\"Filter_input__2UtmW\",\"modal-form-icon\":\"Filter_modal-form-icon__1UDOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1ui_D\",\"modal-form-icon\":\"ContactForm_modal-form-icon__3y4T2\",\"title\":\"ContactForm_title__1FKcF\",\"text\":\"ContactForm_text__2IeJN\",\"button\":\"ContactForm_button__3TCPP\"};","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst initialStoreItem = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst itemsReduser = (state = initialStoreItem, { type, payload }) => {\r\n  switch (type) {\r\n    case \"contact/add\":\r\n      const existingContact = state.some(({ name }) => name === payload.name);\r\n      return !existingContact\r\n        ? [...state, payload]\r\n        : (alert(`Пользователь с именем ${payload.name} уже добавлен`), state);\r\n\r\n    case \"contact/delete\":\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReduser = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case \"contact/filter\":\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactsReduser = combineReducers({\r\n  items: itemsReduser,\r\n  filter: filterReduser,\r\n});\r\n\r\nconst rootReduser = combineReducers({\r\n  contacts: contactsReduser,\r\n});\r\n\r\nconst store = createStore(rootReduser, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/action\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSumbit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumder(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    onSumbit(name, number);\n    console.log(name, number);\n    toСlear();\n  };\n\n  const toСlear = () => {\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <h1 className={s.title}>Phonebook </h1>\n      <label className={s.label}>\n        <p className={s.text}>Name</p>\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </label>\n      <label>\n        <p className={s.text}>Number</p>\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSumbit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSumbit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import shortid from \"shortid\";\r\n\r\nconst addContact = (name, number) => {\r\n  return {\r\n    type: \"contact/add\",\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n};\r\n\r\nconst deleteContact = (id) => ({\r\n  type: \"contact/delete\",\r\n  payload: id,\r\n});\r\n\r\nconst handelChangeFilter = (value) => ({\r\n  type: \"contact/filter\",\r\n  payload: value,\r\n});\r\n\r\nexport { addContact, deleteContact, handelChangeFilter };\r\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/action\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <div>\n            <p className={s.text}>\n              Name: <span className={s.text_d}>{name}</span>\n            </p>\n            <p className={s.text}>\n              Number: <span className={s.text_d}>{number}</span>\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            id={id}\n            className={s.button}\n            onClick={() => deleteContact(id)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst getFilterContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilterContacts(state.contacts.items, state.contacts.filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { handelChangeFilter } from \"../../redux/action\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ filter, handelChangeFilter }) {\n  return (\n    <>\n      <h2 className={s.title}>Find contacts by name</h2>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => handelChangeFilter(e.currentTarget.value)}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handelChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handelChangeFilter: (value) => dispatch(handelChangeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// import { useState } from \"react\";\n// import shortid from \"shortid\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\n// import getFilterContacts from \"./helpers/filter\";\n// import { useLocalStorage } from \"./hooks/localStorage\";\n\n// const defaultContacts = [\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n// ];\n\nfunction App() {\n  // const [contacts, setContacts] = useLocalStorage(\"contacts\", defaultContacts);\n  // const [filter, setFilter] = useState(\"\");\n\n  // const handlelAddContact = (contact) => {\n  //   contacts.some((userName) => userName.name === contact.name)\n  //     ? alert(\"Пользователь с таким именем уже добавлен\")\n  //     : setContacts((prevstate) => [\n  //         ...prevstate,\n  //         { id: shortid.generate(), ...contact },\n  //       ]);\n  // };\n\n  // const deleteContact = (id) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== id));\n  // };\n\n  // const handelChangeFilter = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <ContactForm\n      // handlelAddContact={handlelAddContact}\n      />\n      <Filter\n      // filter={filter}\n      // handelChangeFilter={handelChangeFilter}\n      />\n      <ContactList\n      // contacts={getFilterContacts(contacts, filter)}\n      // deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__YrtUj\",\"text\":\"ContactList_text__yF7d0\",\"text_d\":\"ContactList_text_d__1RtxN\",\"item\":\"ContactList_item__D8V31\",\"button\":\"ContactList_button__2hE9L\"};"],"sourceRoot":""}