{"version":3,"sources":["components/Filter/Filter.module.css","redux/action.js","redux/reducer.js","helpers/newContact.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","helpers/filter.js","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","handelChangeFilter","itemsReduser","createReducer","state","action","some","alert","getNewContact","filter","filterReduser","_","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ContactForm","useState","setName","setNumder","dispatch","useDispatch","handelChange","e","target","value","toСlear","onSubmit","preventDefault","console","log","className","s","title","label","text","type","input","pattern","required","onChange","button","ContactList","useSelector","toLowerCase","includes","trim","getFilterContacts","list","map","item","text_d","onClick","Filter","currentTarget","App","getState","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,kBAAkB,kC,6KCC1FC,EAAaC,YAAa,eAAe,SAACC,EAAMC,GACpD,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAKAI,EAAgBN,YAAa,kBAE7BO,EAAqBP,YAAa,kB,QCFlCQ,EAAeC,YAPI,CACvB,CAAEL,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eAGd,mBAC/BH,GAAa,SAACW,EAAOC,GAAR,OCba,SAACD,EAAOC,GAInC,OAHwBD,EAAME,MAC5B,qBAAGX,OAAoBU,EAAOR,QAAQF,SAInCY,MAAM,wHAAD,OAA0BF,EAAOR,QAAQF,KAAzC,yEACNS,GAHG,sBACCA,GADD,CACQC,EAAOR,UDQWW,CAAcJ,EAAOC,MADtB,cAE/BL,GAAgB,SAACI,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACfO,EAAMK,QAAO,qBAAGX,KAAgBD,QAHF,IAM5Ba,EAAgBP,YAAc,GAAD,eAChCF,GAAqB,SAACU,EAAGN,GAAJ,OAAeA,EAAOR,YAG/Be,cAAgB,CAC7BC,MAAOX,EACPO,OAAQC,I,iBETJI,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,YAAeR,EAAuBS,IAElDC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAOC,MACZC,UAAUC,IAGNC,EAAYC,YAAarB,G,8CC5BhB,SAASsB,IACtB,MAAwBC,mBAAS,IAAjC,mBAAO9C,EAAP,KAAa+C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO7C,EAAP,KAAe+C,EAAf,KACMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBrD,EAAR,EAAQA,KAAMsD,EAAd,EAAcA,MACd,OAAQtD,GACN,IAAK,OACH+C,EAAQO,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAYAC,EAAU,WACdR,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMQ,SAda,SAACJ,GACpBA,EAAEK,iBAEFR,EAASnD,EAAWE,EAAMC,IAC1ByD,QAAQC,IAAI3D,EAAMC,GAClBsD,KASA,UACE,oBAAIK,UAAWC,IAAEC,MAAjB,wBACA,wBAAOF,UAAWC,IAAEE,MAApB,UACE,mBAAGH,UAAWC,IAAEG,KAAhB,kBACA,uBACEC,KAAK,OACLL,UAAWC,IAAEK,MACblE,KAAK,OACLmE,QAAQ,yHACRL,MAAM,kcACNM,UAAQ,EACRd,MAAOtD,EACPqE,SAAUlB,OAGd,kCACE,mBAAGS,UAAWC,IAAEG,KAAhB,oBACA,uBACEC,KAAK,MACLL,UAAWC,IAAEK,MACblE,KAAK,SACLmE,QAAQ,yFACRL,MAAM,giBACNM,UAAQ,EACRd,MAAOrD,EACPoE,SAAUlB,OAGd,wBAAQc,KAAK,SAASL,UAAWC,IAAES,OAAnC,4B,oBChES,SAASC,IACtB,IAAM7C,EAAW8C,aAAY,oBAAG9C,SAAH,OCNE,SAACA,EAAUZ,GAC1C,OAAOY,EAASZ,QAAO,qBAAGd,KACnByE,cAAcC,SAAS5D,EAAO6D,OAAOF,kBDK1CG,CAD2B,EAAe1D,MAAf,EAAsBJ,WAI7CmC,EAAWC,cAEjB,OACE,oBAAIU,UAAWC,IAAEgB,KAAjB,SACGnD,EAASoD,KAAI,gBAAG3E,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAI2D,UAAWC,IAAEkB,KAAjB,UACE,gCACE,oBAAGnB,UAAWC,IAAEG,KAAhB,mBACQ,sBAAMJ,UAAWC,IAAEmB,OAAnB,SAA4BhF,OAEpC,oBAAG4D,UAAWC,IAAEG,KAAhB,qBACU,sBAAMJ,UAAWC,IAAEmB,OAAnB,SAA4B/E,UAGxC,wBACEgE,KAAK,SACL9D,GAAIA,EACJyD,UAAWC,IAAES,OACbW,QAAS,kBAAMhC,EAAS5C,EAAcF,KAJxC,sBAT0BA,Q,qBEXrB,SAAS+E,IACtB,IAAMpE,EAAS0D,aAAY,qBAAG9C,SAAwBZ,UAChDmC,EAAWC,cAEjB,OACE,qCACE,oBAAIU,UAAWC,IAAEC,MAAjB,mCACA,uBACEF,UAAWC,IAAEK,MACbD,KAAK,OACLjE,KAAK,SACLsD,MAAOxC,EACPuD,SAAU,SAACjB,GAAD,OAAOH,EAAS3C,EAAmB8C,EAAE+B,cAAc7B,cCEtD8B,MAVf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAACf,EAAD,IACA,cAACqC,EAAD,IACA,cAACX,EAAD,Q,MCLNb,QAAQC,IAAIpC,EAAM8D,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAakE,QAAS,KAAM9C,UAAWA,EAAvC,SACE,cAAC,EAAD,UAIN+C,SAASC,eAAe,U,kBCjB1B/F,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,kBAAkB,qCAAqC,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,8B,kBCAzLD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.33736da5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1Ts-M\",\"input\":\"Filter_input__2UtmW\",\"modal-form-icon\":\"Filter_modal-form-icon__1UDOD\"};","import { createAction, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\nconst handelChangeFilter = createAction(\"contact/filter\");\r\n\r\nexport { addContact, deleteContact, handelChangeFilter };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, handelChangeFilter } from \"./action\";\r\nimport { getNewContact } from \"../helpers/newContact\";\r\n\r\nconst initialStoreItem = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst itemsReduser = createReducer(initialStoreItem, {\r\n  [addContact]: (state, action) => getNewContact(state, action),\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReduser = createReducer(\"\", {\r\n  [handelChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReduser,\r\n  filter: filterReduser,\r\n});\r\n","export const getNewContact = (state, action) => {\r\n  const existingContact = state.some(\r\n    ({ name }) => name === action.payload.name\r\n  );\r\n  return !existingContact\r\n    ? [...state, action.payload]\r\n    : (alert(`Пользователь с именем ${action.payload.name} уже добавлен`),\r\n      state);\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReduser from \"./reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/action\";\n\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumder(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(addContact(name, number));\n    console.log(name, number);\n    toСlear();\n  };\n\n  const toСlear = () => {\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <h1 className={s.title}>Phonebook </h1>\n      <label className={s.label}>\n        <p className={s.text}>Name</p>\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </label>\n      <label>\n        <p className={s.text}>Number</p>\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSumbit: (name, number) => dispatch(addContact(name, number)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/action\";\nimport { getFilterContacts } from \"../../helpers/filter\";\n\nexport default function ContactList() {\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getFilterContacts(items, filter)\n  );\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <div>\n            <p className={s.text}>\n              Name: <span className={s.text_d}>{name}</span>\n            </p>\n            <p className={s.text}>\n              Number: <span className={s.text_d}>{number}</span>\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            id={id}\n            className={s.button}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// const getFilterContacts = (contacts, filter) => {\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(filter.trim().toLowerCase())\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilterContacts(items, filter),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   deleteContact: (id) => dispatch(deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","export const getFilterContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { handelChangeFilter } from \"../../redux/action\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const filter = useSelector(({ contacts }) => contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h2 className={s.title}>Find contacts by name</h2>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(handelChangeFilter(e.currentTarget.value))}\n      />\n    </>\n  );\n}\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   handelChangeFilter: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   filter: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handelChangeFilter: (value) => dispatch(handelChangeFilter(value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\n// import { useLocalStorage } from \"./hooks/localStorage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1ui_D\",\"modal-form-icon\":\"ContactForm_modal-form-icon__3y4T2\",\"title\":\"ContactForm_title__1FKcF\",\"text\":\"ContactForm_text__2IeJN\",\"button\":\"ContactForm_button__3TCPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__YrtUj\",\"text\":\"ContactList_text__yF7d0\",\"text_d\":\"ContactList_text_d__1RtxN\",\"item\":\"ContactList_item__D8V31\",\"button\":\"ContactList_button__2hE9L\"};"],"sourceRoot":""}